name: Build DMG

on:
  push:
    branches: [ master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: macos-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build DMG
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
        run: npm run dist

      - name: Upload DMG artifact
        uses: actions/upload-artifact@v4
        with:
          name: dmg
          path: dist/*.dmg

      - name: Create or Update Release
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        run: |
          # Check if release already exists
          if gh release view ${{ github.ref_name }} >/dev/null 2>&1; then
            echo "Release ${{ github.ref_name }} already exists, will upload assets there"
            echo "upload_url=$(gh api repos/${{ github.repository }}/releases/tags/${{ github.ref_name }} --jq .upload_url | sed 's/{?name,label}//')" >> $GITHUB_OUTPUT
          else
            echo "Creating new release ${{ github.ref_name }}"
            gh release create ${{ github.ref_name }} \
              --title "Release ${{ github.ref_name }}" \
              --notes "Private Todo ${{ github.ref_name }}" \
              --draft=false \
              --prerelease=false
            echo "upload_url=$(gh api repos/${{ github.repository }}/releases/tags/${{ github.ref_name }} --jq .upload_url | sed 's/{?name,label}//')" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload DMG to Release
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          # Find the DMG file
          DMG_FILE=$(find dist -name "*.dmg" | head -n 1)
          if [ -n "$DMG_FILE" ]; then
            echo "Uploading $DMG_FILE to release"
            gh release upload ${{ github.ref_name }} "$DMG_FILE" --clobber
          else
            echo "No DMG file found in dist directory"
            exit 1
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
